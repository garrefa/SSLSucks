//  Created by Scott Gustafson on 3/15/14.
//  Copyright (c) 2014 Garlic Software LLC. All rights reserved.
//

#import "SecureViewController.h"
#import <Security/Security.h>

@interface SecureViewController () <NSURLConnectionDelegate, NSURLConnectionDataDelegate>
@property (weak, nonatomic) IBOutlet UITextField *name;
@property (weak, nonatomic) IBOutlet UITextField *address;
@property (weak, nonatomic) IBOutlet UITextField *city;
@property (weak, nonatomic) IBOutlet UITextField *state;
@property (weak, nonatomic) IBOutlet UITextField *phone;
@property (weak, nonatomic) IBOutlet UITextField *ssn;
@property (weak, nonatomic) IBOutlet UITextField *dob;
@property (weak, nonatomic) IBOutlet UITextField *maidenname;
@property (weak, nonatomic) IBOutlet UIScrollView *scroller;

@end

@implementation SecureViewController

- (void)viewDidAppear:(BOOL)animated {
	[super viewDidAppear:animated];
	
	[self.scroller setContentSize:self.scroller.frame.size];
	[self.scroller setContentInset:UIEdgeInsetsZero];
	
	[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
	[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];
}

- (void)viewDidDisappear:(BOOL)animated {
	[super viewDidDisappear:animated];
	
	[[NSNotificationCenter defaultCenter] removeObserver:self];
}

#pragma mark - Keyboard

- (void)keyboardWillShow:(NSNotification*)aNotification {
	NSDictionary* info = [aNotification userInfo];
	CGSize keyboardSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
	UIEdgeInsets contentInsets = UIEdgeInsetsMake(0.0, 0.0, keyboardSize.height, 0.0);
	NSTimeInterval duration = [[info objectForKey:UIKeyboardAnimationDurationUserInfoKey] doubleValue];
	[UIView animateWithDuration:duration delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{
		self.scroller.contentInset = contentInsets;
		self.scroller.scrollIndicatorInsets = contentInsets;
	} completion:nil];
}

- (void)keyboardWillHide:(NSNotification*)aNotification {
	UIEdgeInsets contentInsets = UIEdgeInsetsZero;
	NSDictionary* info = [aNotification userInfo];
	NSTimeInterval duration = [[info objectForKey:UIKeyboardAnimationDurationUserInfoKey] doubleValue];
	[UIView animateWithDuration:duration delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{
		self.scroller.contentInset = contentInsets;
		self.scroller.scrollIndicatorInsets = contentInsets;
	} completion:nil];
}

#pragma mark - Text Input

- (IBAction)nameEndEditing:(id)sender {
	[self.address becomeFirstResponder];
}

- (IBAction)addressEndEditing:(id)sender {
	[self.city becomeFirstResponder];
}

- (IBAction)cityEndEditing:(id)sender {
	[self.state becomeFirstResponder];
}

- (IBAction)stateEndEditing:(id)sender {
	[self.phone becomeFirstResponder];
}

- (IBAction)phoneNumberEndEditing:(id)sender {
	[self.ssn becomeFirstResponder];
}

- (IBAction)ssnEndEditing:(id)sender {
	[self.dob becomeFirstResponder];
}

- (IBAction)dobEndEditing:(id)sender {
	[self.maidenname becomeFirstResponder];
}

- (IBAction)lastItemDoneEditing:(id)sender {
	[sender resignFirstResponder];
}

- (IBAction)sendButtonHit:(id)sender {
	NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://www.garlicsoftware.com/scott/responder.cgi"]];
	
	[request setHTTPMethod:@"POST"];
	[request addValue:[self.name text] forHTTPHeaderField:@"X-CUSTOM-Name"];
	[request addValue:[self.address text] forHTTPHeaderField:@"X-CUSTOM-Address"];
	[request addValue:[self.city text] forHTTPHeaderField:@"X-CUSTOM-City"];
	[request addValue:[self.state text] forHTTPHeaderField:@"X-CUSTOM-State"];
	[request addValue:[self.phone text] forHTTPHeaderField:@"X-CUSTOM-Phone"];
	[request addValue:[self.ssn text] forHTTPHeaderField:@"X-CUSTOM-SSN"];
	[request addValue:[self.dob text] forHTTPHeaderField:@"X-CUSTOM-DOB"];
	[request addValue:[self.maidenname text] forHTTPHeaderField:@"X-CUSTOM-MaidenName"];
	
	[NSURLConnection connectionWithRequest:request delegate:self];
}

#pragma mark - NSURLConnectionDelegate

- (BOOL)connection:(NSURLConnection *)conn canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace {
    return YES;
}

- (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge {
	
    SecTrustRef trustRef = [[challenge protectionSpace] serverTrust];
    OSStatus result = SecTrustEvaluate(trustRef, NULL);
	if (result != errSecSuccess) {
		[[challenge sender] cancelAuthenticationChallenge:challenge];
	}
    SecCertificateRef certRef = SecTrustGetCertificateAtIndex(trustRef, 0);
    NSData *certificateData = CFBridgingRelease(SecCertificateCopyData(certRef));
	
	// embedded public SSL certificate for garlicsoftware.com
	unsigned char garlicsoftware_certificate[1647]={
		0x30,0x82,0x06,0x6B,0x30,0x82,0x05,0x53,0xA0,0x03,0x02,0x01,0x02,0x02,0x03,0x0F,
		0x27,0x31,0x30,0x0D,0x06,0x09,0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x05,0x05,
		0x00,0x30,0x81,0x8C,0x31,0x0B,0x30,0x09,0x06,0x03,0x55,0x04,0x06,0x13,0x02,0x49,
		0x4C,0x31,0x16,0x30,0x14,0x06,0x03,0x55,0x04,0x0A,0x13,0x0D,0x53,0x74,0x61,0x72,
		0x74,0x43,0x6F,0x6D,0x20,0x4C,0x74,0x64,0x2E,0x31,0x2B,0x30,0x29,0x06,0x03,0x55,
		0x04,0x0B,0x13,0x22,0x53,0x65,0x63,0x75,0x72,0x65,0x20,0x44,0x69,0x67,0x69,0x74,
		0x61,0x6C,0x20,0x43,0x65,0x72,0x74,0x69,0x66,0x69,0x63,0x61,0x74,0x65,0x20,0x53,
		0x69,0x67,0x6E,0x69,0x6E,0x67,0x31,0x38,0x30,0x36,0x06,0x03,0x55,0x04,0x03,0x13,
		0x2F,0x53,0x74,0x61,0x72,0x74,0x43,0x6F,0x6D,0x20,0x43,0x6C,0x61,0x73,0x73,0x20,
		0x31,0x20,0x50,0x72,0x69,0x6D,0x61,0x72,0x79,0x20,0x49,0x6E,0x74,0x65,0x72,0x6D,
		0x65,0x64,0x69,0x61,0x74,0x65,0x20,0x53,0x65,0x72,0x76,0x65,0x72,0x20,0x43,0x41,
		0x30,0x1E,0x17,0x0D,0x31,0x34,0x30,0x33,0x31,0x35,0x31,0x32,0x33,0x38,0x35,0x38,
		0x5A,0x17,0x0D,0x31,0x35,0x30,0x33,0x31,0x36,0x31,0x36,0x33,0x39,0x34,0x31,0x5A,
		0x30,0x70,0x31,0x19,0x30,0x17,0x06,0x03,0x55,0x04,0x0D,0x13,0x10,0x58,0x78,0x69,
		0x32,0x47,0x46,0x30,0x46,0x47,0x6E,0x39,0x76,0x66,0x57,0x63,0x32,0x31,0x0B,0x30,
		0x09,0x06,0x03,0x55,0x04,0x06,0x13,0x02,0x55,0x53,0x31,0x1F,0x30,0x1D,0x06,0x03,
		0x55,0x04,0x03,0x13,0x16,0x77,0x77,0x77,0x2E,0x67,0x61,0x72,0x6C,0x69,0x63,0x73,
		0x6F,0x66,0x74,0x77,0x61,0x72,0x65,0x2E,0x63,0x6F,0x6D,0x31,0x25,0x30,0x23,0x06,
		0x09,0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x01,0x16,0x16,0x64,0x6E,0x73,0x40,
		0x67,0x61,0x72,0x6C,0x69,0x63,0x73,0x6F,0x66,0x74,0x77,0x61,0x72,0x65,0x2E,0x63,
		0x6F,0x6D,0x30,0x82,0x01,0x22,0x30,0x0D,0x06,0x09,0x2A,0x86,0x48,0x86,0xF7,0x0D,
		0x01,0x01,0x01,0x05,0x00,0x03,0x82,0x01,0x0F,0x00,0x30,0x82,0x01,0x0A,0x02,0x82,
		0x01,0x01,0x00,0xB6,0x6D,0x0D,0xED,0x6C,0xFC,0xD1,0xBD,0x4A,0x30,0xC9,0xC1,0xC2,
		0x92,0x87,0xF8,0x79,0x09,0x5C,0x1A,0x29,0x24,0x4B,0xA8,0x4E,0x71,0xF6,0x5E,0x00,
		0xA9,0xA2,0xCD,0x5E,0xC2,0x4C,0xFC,0x4B,0x15,0x7A,0xE6,0x6C,0x58,0xB7,0x4F,0x16,
		0x72,0x64,0x89,0x4C,0x44,0x46,0x03,0xF1,0x6D,0x94,0xCE,0x77,0x21,0x7D,0x58,0x2E,
		0x90,0x14,0x29,0x58,0xDE,0x02,0x21,0xC9,0xA8,0xA3,0x2B,0xA4,0x2E,0x17,0x22,0x4B,
		0xE6,0x66,0xA4,0x49,0x19,0x54,0xE8,0x4F,0x29,0x55,0x59,0xDB,0x7A,0x92,0x2C,0xB5,
		0x7F,0x39,0x2F,0xE3,0xCE,0x50,0xF2,0x03,0xD3,0x87,0xE4,0x56,0x43,0x7A,0x28,0x16,
		0x39,0x92,0xEC,0x2D,0xBA,0xBC,0x5E,0x4C,0x07,0xAC,0x3C,0xF0,0x94,0xA2,0x85,0x73,
		0x20,0xAD,0x16,0xC6,0x66,0x11,0x30,0x3B,0xFD,0xED,0x20,0x34,0x0A,0x4E,0x27,0x27,
		0x0F,0x24,0xEC,0x3D,0x40,0xBF,0x08,0x50,0x77,0x2B,0x1E,0x5C,0x8B,0xE8,0x15,0xCC,
		0x97,0xD3,0xE1,0x7C,0x17,0x2E,0xD7,0xF0,0x05,0x64,0x48,0x72,0x49,0x1B,0xF5,0x06,
		0xA7,0x1B,0xB7,0x4E,0xBF,0xA7,0xEC,0x2B,0xFC,0x65,0x3E,0xF0,0x83,0xAB,0xFE,0xC5,
		0xAE,0x84,0x0E,0x58,0xEE,0xC6,0x73,0xF8,0xD6,0xB4,0xAB,0x07,0x1B,0x11,0x5D,0xC1,
		0x1E,0xC9,0x45,0xD0,0x02,0x0D,0x36,0x3B,0x34,0x2F,0x7F,0xCA,0x5A,0x7C,0xA7,0xF1,
		0xA6,0x93,0x89,0x57,0x54,0x3C,0x89,0xC5,0xAC,0x86,0xA8,0x7E,0x78,0xCD,0xCA,0x79,
		0xA1,0x28,0x21,0x93,0xB0,0x94,0xE3,0x48,0x9A,0x4C,0x0B,0xF0,0x67,0xA0,0x61,0xF9,
		0xEC,0x9C,0x57,0x02,0x03,0x01,0x00,0x01,0xA3,0x82,0x02,0xEF,0x30,0x82,0x02,0xEB,
		0x30,0x09,0x06,0x03,0x55,0x1D,0x13,0x04,0x02,0x30,0x00,0x30,0x0B,0x06,0x03,0x55,
		0x1D,0x0F,0x04,0x04,0x03,0x02,0x03,0xA8,0x30,0x13,0x06,0x03,0x55,0x1D,0x25,0x04,
		0x0C,0x30,0x0A,0x06,0x08,0x2B,0x06,0x01,0x05,0x05,0x07,0x03,0x01,0x30,0x1D,0x06,
		0x03,0x55,0x1D,0x0E,0x04,0x16,0x04,0x14,0xB9,0x0D,0xB1,0x3D,0x96,0x9F,0xE6,0x51,
		0x86,0x8D,0xCD,0xD0,0x0E,0xF3,0xF4,0x79,0xFA,0x8E,0x12,0xCC,0x30,0x1F,0x06,0x03,
		0x55,0x1D,0x23,0x04,0x18,0x30,0x16,0x80,0x14,0xEB,0x42,0x34,0xD0,0x98,0xB0,0xAB,
		0x9F,0xF4,0x1B,0x6B,0x08,0xF7,0xCC,0x64,0x2E,0xEF,0x0E,0x2C,0x45,0x30,0x35,0x06,
		0x03,0x55,0x1D,0x11,0x04,0x2E,0x30,0x2C,0x82,0x16,0x77,0x77,0x77,0x2E,0x67,0x61,
		0x72,0x6C,0x69,0x63,0x73,0x6F,0x66,0x74,0x77,0x61,0x72,0x65,0x2E,0x63,0x6F,0x6D,
		0x82,0x12,0x67,0x61,0x72,0x6C,0x69,0x63,0x73,0x6F,0x66,0x74,0x77,0x61,0x72,0x65,
		0x2E,0x63,0x6F,0x6D,0x30,0x82,0x01,0x56,0x06,0x03,0x55,0x1D,0x20,0x04,0x82,0x01,
		0x4D,0x30,0x82,0x01,0x49,0x30,0x08,0x06,0x06,0x67,0x81,0x0C,0x01,0x02,0x01,0x30,
		0x82,0x01,0x3B,0x06,0x0B,0x2B,0x06,0x01,0x04,0x01,0x81,0xB5,0x37,0x01,0x02,0x03,
		0x30,0x82,0x01,0x2A,0x30,0x2E,0x06,0x08,0x2B,0x06,0x01,0x05,0x05,0x07,0x02,0x01,
		0x16,0x22,0x68,0x74,0x74,0x70,0x3A,0x2F,0x2F,0x77,0x77,0x77,0x2E,0x73,0x74,0x61,
		0x72,0x74,0x73,0x73,0x6C,0x2E,0x63,0x6F,0x6D,0x2F,0x70,0x6F,0x6C,0x69,0x63,0x79,
		0x2E,0x70,0x64,0x66,0x30,0x81,0xF7,0x06,0x08,0x2B,0x06,0x01,0x05,0x05,0x07,0x02,
		0x02,0x30,0x81,0xEA,0x30,0x27,0x16,0x20,0x53,0x74,0x61,0x72,0x74,0x43,0x6F,0x6D,
		0x20,0x43,0x65,0x72,0x74,0x69,0x66,0x69,0x63,0x61,0x74,0x69,0x6F,0x6E,0x20,0x41,
		0x75,0x74,0x68,0x6F,0x72,0x69,0x74,0x79,0x30,0x03,0x02,0x01,0x01,0x1A,0x81,0xBE,
		0x54,0x68,0x69,0x73,0x20,0x63,0x65,0x72,0x74,0x69,0x66,0x69,0x63,0x61,0x74,0x65,
		0x20,0x77,0x61,0x73,0x20,0x69,0x73,0x73,0x75,0x65,0x64,0x20,0x61,0x63,0x63,0x6F,
		0x72,0x64,0x69,0x6E,0x67,0x20,0x74,0x6F,0x20,0x74,0x68,0x65,0x20,0x43,0x6C,0x61,
		0x73,0x73,0x20,0x31,0x20,0x56,0x61,0x6C,0x69,0x64,0x61,0x74,0x69,0x6F,0x6E,0x20,
		0x72,0x65,0x71,0x75,0x69,0x72,0x65,0x6D,0x65,0x6E,0x74,0x73,0x20,0x6F,0x66,0x20,
		0x74,0x68,0x65,0x20,0x53,0x74,0x61,0x72,0x74,0x43,0x6F,0x6D,0x20,0x43,0x41,0x20,
		0x70,0x6F,0x6C,0x69,0x63,0x79,0x2C,0x20,0x72,0x65,0x6C,0x69,0x61,0x6E,0x63,0x65,
		0x20,0x6F,0x6E,0x6C,0x79,0x20,0x66,0x6F,0x72,0x20,0x74,0x68,0x65,0x20,0x69,0x6E,
		0x74,0x65,0x6E,0x64,0x65,0x64,0x20,0x70,0x75,0x72,0x70,0x6F,0x73,0x65,0x20,0x69,
		0x6E,0x20,0x63,0x6F,0x6D,0x70,0x6C,0x69,0x61,0x6E,0x63,0x65,0x20,0x6F,0x66,0x20,
		0x74,0x68,0x65,0x20,0x72,0x65,0x6C,0x79,0x69,0x6E,0x67,0x20,0x70,0x61,0x72,0x74,
		0x79,0x20,0x6F,0x62,0x6C,0x69,0x67,0x61,0x74,0x69,0x6F,0x6E,0x73,0x2E,0x30,0x35,
		0x06,0x03,0x55,0x1D,0x1F,0x04,0x2E,0x30,0x2C,0x30,0x2A,0xA0,0x28,0xA0,0x26,0x86,
		0x24,0x68,0x74,0x74,0x70,0x3A,0x2F,0x2F,0x63,0x72,0x6C,0x2E,0x73,0x74,0x61,0x72,
		0x74,0x73,0x73,0x6C,0x2E,0x63,0x6F,0x6D,0x2F,0x63,0x72,0x74,0x31,0x2D,0x63,0x72,
		0x6C,0x2E,0x63,0x72,0x6C,0x30,0x81,0x8E,0x06,0x08,0x2B,0x06,0x01,0x05,0x05,0x07,
		0x01,0x01,0x04,0x81,0x81,0x30,0x7F,0x30,0x39,0x06,0x08,0x2B,0x06,0x01,0x05,0x05,
		0x07,0x30,0x01,0x86,0x2D,0x68,0x74,0x74,0x70,0x3A,0x2F,0x2F,0x6F,0x63,0x73,0x70,
		0x2E,0x73,0x74,0x61,0x72,0x74,0x73,0x73,0x6C,0x2E,0x63,0x6F,0x6D,0x2F,0x73,0x75,
		0x62,0x2F,0x63,0x6C,0x61,0x73,0x73,0x31,0x2F,0x73,0x65,0x72,0x76,0x65,0x72,0x2F,
		0x63,0x61,0x30,0x42,0x06,0x08,0x2B,0x06,0x01,0x05,0x05,0x07,0x30,0x02,0x86,0x36,
		0x68,0x74,0x74,0x70,0x3A,0x2F,0x2F,0x61,0x69,0x61,0x2E,0x73,0x74,0x61,0x72,0x74,
		0x73,0x73,0x6C,0x2E,0x63,0x6F,0x6D,0x2F,0x63,0x65,0x72,0x74,0x73,0x2F,0x73,0x75,
		0x62,0x2E,0x63,0x6C,0x61,0x73,0x73,0x31,0x2E,0x73,0x65,0x72,0x76,0x65,0x72,0x2E,
		0x63,0x61,0x2E,0x63,0x72,0x74,0x30,0x23,0x06,0x03,0x55,0x1D,0x12,0x04,0x1C,0x30,
		0x1A,0x86,0x18,0x68,0x74,0x74,0x70,0x3A,0x2F,0x2F,0x77,0x77,0x77,0x2E,0x73,0x74,
		0x61,0x72,0x74,0x73,0x73,0x6C,0x2E,0x63,0x6F,0x6D,0x2F,0x30,0x0D,0x06,0x09,0x2A,
		0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x05,0x05,0x00,0x03,0x82,0x01,0x01,0x00,0x37,
		0x88,0xE0,0xD5,0xE0,0xDE,0x76,0x4E,0x6B,0xE8,0x2F,0x49,0x64,0xFD,0x17,0x3C,0x59,
		0x1F,0x7B,0x0A,0xF7,0x16,0x89,0xD4,0xAD,0x91,0x70,0x0F,0xDE,0x71,0x28,0x21,0x78,
		0x83,0xBE,0x75,0xB2,0x45,0x81,0xB8,0x93,0x18,0x3C,0x1C,0x00,0xEF,0x41,0x05,0xCB,
		0xDA,0x3B,0xFB,0x2D,0x18,0xDA,0x8C,0x57,0x1F,0xBC,0xF6,0xDE,0xC2,0x54,0x70,0x72,
		0xC5,0x90,0xF3,0xC5,0x68,0xB8,0xBC,0x6F,0xE5,0x12,0x4E,0xF8,0x06,0xF6,0x2B,0xF6,
		0x9A,0xB1,0xC5,0x89,0xC5,0x37,0x69,0x75,0x02,0x6E,0xA9,0x76,0xED,0x48,0x8F,0x48,
		0x8B,0x35,0x24,0xBA,0xE2,0x56,0xF2,0x17,0xF5,0xDB,0x58,0xB5,0x4F,0xE9,0xEC,0x6C,
		0x24,0x72,0x1B,0x95,0x5C,0x56,0x92,0xE2,0x84,0x56,0xC2,0x3A,0x0A,0x3C,0x5E,0x4E,
		0x8B,0x7F,0x8E,0x50,0xD8,0x8B,0xAF,0xE4,0x1E,0x60,0xBD,0x9E,0xA0,0xAE,0xB3,0xF5,
		0x06,0x29,0xCF,0x95,0x5E,0x5C,0x4B,0x2E,0xBB,0xAB,0x18,0x92,0x85,0x6A,0x2F,0xFE,
		0xA8,0x22,0x80,0x13,0x0A,0x72,0x6A,0x5B,0x07,0x17,0x75,0x8E,0x1D,0xF5,0xBE,0xB7,
		0x55,0xE3,0x3C,0xD9,0x98,0x54,0x56,0xE3,0x88,0x06,0x9D,0x14,0xB9,0x53,0x78,0x75,
		0xD6,0x69,0xAC,0xD3,0x73,0x94,0xB4,0x4E,0x46,0xEB,0x96,0x29,0x61,0xC4,0xB6,0x81,
		0x97,0x0E,0x9B,0x5D,0x58,0x51,0xA8,0x9D,0x65,0x50,0xA0,0x25,0x3C,0xEB,0x59,0xB7,
		0x16,0x26,0x4F,0x63,0xF7,0xDB,0x32,0x7E,0x55,0xAF,0xE0,0xFF,0xE9,0x34,0xE3,0xA3,
		0x33,0xEB,0xEC,0xF5,0xCA,0x18,0x64,0x0D,0xD0,0x1B,0x1F,0xCB,0xBB,0xA2,0x02,
	};
	
	NSData *knownGoodCert = [NSData dataWithBytesNoCopy:garlicsoftware_certificate length:1647 freeWhenDone:NO];
	
	if (![knownGoodCert isEqualToData:certificateData]) {
		NSLog(@"Certificate mismatch");
		dispatch_async(dispatch_get_main_queue(), ^{
			UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"Attack Detected" message:@"A man in the middle attack has been detected. Data not sent." delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
			[alert show];
		});
		[[challenge sender] cancelAuthenticationChallenge:challenge];
	} else {
		NSLog(@"Certificate match");
		dispatch_async(dispatch_get_main_queue(), ^{
			UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"Message Sent" message:@"The data has been sent successfully." delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
			[alert show];
			[[self navigationController] popToRootViewControllerAnimated:YES];
		});
	}

	NSURLCredential *credential = [NSURLCredential credentialForTrust:trustRef];
	[[challenge sender] useCredential:credential forAuthenticationChallenge:challenge];
}

#pragma mark - NSURLConnectionDataDelegate

- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {
	NSString *html = [[NSString alloc] initWithBytes:[data bytes] length:[data length] encoding:NSUTF8StringEncoding];
	NSLog(@"data: %@", html);
}

@end
